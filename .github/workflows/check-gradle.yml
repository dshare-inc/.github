name: ✅ Check (Gradle)

on:
  workflow_call:
    inputs:
      java_version:
        type: string
        description: 'Java version (default is 11)'
        default: '11'
        required: false
      java_distribution:
        type: string
        description: 'Java distribution (default is adopt)'
        default: 'adopt'
        required: false
      commands:
        type: string
        description: 'Gradle test command. split by ",". build and code coverage report is @.'
        default: 'test @ jacocoTestReport @ build -x test @ build/reports/jacoco @ report.xml @ test'
        required: false
      clean_build:
        type: boolean
        description: 'Build after clean'
        default: true
        required: false
    secrets:
      AWS_ROLE_REGION:
        required: true
      AWS_CODE_MANAGER_ROLE:
        required: true
      AWS_ROLE_SESSION_DURATION:
        required: true
      AWS_CODEARTIFACT_REGION:
        required: true
      AWS_CODEARTIFACT_DOMAIN:
        required: true
      AWS_CODEARTIFACT_OWNER:
        required: true
      CODECOV_REPO_TOKEN:
        required: true
      SLACK_BOT_TOKEN:
        required: true
      SLACK_REVIEW_NOTIFICATION_CHANNEL:
        required: true

env:
  JAVA_VERSION: ${{ inputs.java_version == null && '11' || inputs.java_version }}
  JAVA_DISTRIBUTION: ${{ inputs.java_distribution == null && 'adopt' || inputs.java_distribution }}
  CLEAN_BUILD: ${{ inputs.clean_build == null && true || inputs.clean_build }}

concurrency:
  group: check-${{ github.repository }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  Matrix:
    name: 'Create gradle test matrix'
    runs-on: actions-runner-system
    outputs:
      matrix: ${{ steps.extract.outputs.result }}
    steps:
      - name: Extract
        uses: actions/github-script@v5
        id: extract
        env:
          MATRIX: ${{ inputs.commands }}
        with:
          result-encoding: string
          script: |
            const { MATRIX } = process.env;

            console.log(`${MATRIX} <- Input`);

            if (MATRIX == null || MATRIX == '') {
              throw Error('Undefined matrix');
            }

            return JSON.stringify({ item: MATRIX.split(',')
              .map(item => item.trim())
              .map(item => {
                const result = item.split('@');
                return {
                  test: result[0].trim(),
                  result: result[1].trim(),
                  build: result[2].trim(),
                  report: result[3].trim(),
                  file: result[4].trim(),
                  name: result[5].trim()
                };
              })
            });

  Tests:
    name: 'Tests (${{ matrix.gradle.name }})'
    needs:
      - Matrix
    strategy:
      matrix:
        gradle: ${{ fromJson(needs.Matrix.outputs.matrix).item }}
    runs-on: actions-runner-system
    timeout-minutes: 16
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        if: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: 'by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}'
          direction: last

      - name: Create PR Comment
        if: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') && steps.fc.outputs.comment-id == '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### 🏃 테스트 `${{ matrix.gradle.name }}` 를 진행중입니다!
            지금 `PR-${{ github.event.pull_request.number }}` 에 대해 테스트를 진행하고 있습니다. 조금만 기다려주세요!
            테스트 결과는 PR Comment, Slack 으로 확인할 수 있습니다.

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

      - name: Update PR Comment
        if: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') && steps.fc.outputs.comment-id != '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### 🏃 다시 테스트 `${{ matrix.gradle.name }}` 를 진행중입니다! 😧
            지금 `PR-${{ github.event.pull_request.number}}` 에 대해 테스트를 진행하고 있습니다. 조금만 기다려주세요!
            테스트 결과는 PR Comment, Slack 으로 확인할 수 있습니다.

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

      - name: Checkout Pull Request VCS
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          token: ${{ github.token }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Checkout VCS (Non PR)
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ github.token }}
          ref: ${{ github.ref }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨')) }}
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          architecture: x64
          cache: gradle

      - name: AWS AssumeRole (Auth)
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨')) }}
        with:
          aws-region: ${{ secrets.AWS_ROLE_REGION }}
          role-to-assume: ${{ secrets.AWS_CODE_MANAGER_ROLE }}
          role-duration-seconds: ${{ secrets.AWS_ROLE_SESSION_DURATION }}

      - name: AWS CodeArtifact Authentication (Gradle)
        uses: dshare-inc/actions-codeartifact-auth@1.0.1
        if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨')) }}
        with:
          region: ${{ secrets.AWS_CODEARTIFACT_REGION }}
          domain: ${{ secrets.AWS_CODEARTIFACT_DOMAIN }}
          owner: ${{ secrets.AWS_CODEARTIFACT_OWNER }}
          type: gradle
          repo: gradle

      - name: Clean
        if: ${{ env.CLEAN_BUILD == 'true' && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
        id: clean
        run: |
          ./gradlew --console verbose clean -Dconsole.encoding=UTF-8 -Dfile.encoding=UTF-8 --no-daemon --parallel

      - name: Build
        id: build
        if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨')) }}
        run: |
          ./gradlew --console verbose ${{ matrix.gradle.build }} -Dconsole.encoding=UTF-8 -Dfile.encoding=UTF-8 --no-daemon --parallel

      - name: Tests
        id: test
        if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨')) }}
        run: |
          ./gradlew --console verbose ${{ matrix.gradle.test }} -Dconsole.encoding=UTF-8 -Dfile.encoding=UTF-8  --parallel > test-result-console

      - name: Generate report
        if: ${{ (success() || failure()) && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
        run: |
          ./gradlew --console verbose ${{ matrix.gradle.result }} -Dconsole.encoding=UTF-8 -Dfile.encoding=UTF-8 --no-daemon --parallel

      - name: Change report name
        if: ${{ (success() || failure()) && matrix.gradle.file != 'report.xml' && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
        run: |
          cp ${{ matrix.gradle.report }}/${{ matrix.gradle.file }} ${{ matrix.gradle.report }}/report.xml

      - name: Upload code coverage report
        uses: actions/upload-artifact@v2
        if: ${{ (success() || failure()) && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
        with:
          name: ${{ matrix.gradle.name }}-github-action-codecov-report
          path: ${{ matrix.gradle.report }}/report.xml
          retention-days: 1
          if-no-files-found: error

      - name: Parse test result
        id: test_result
        if: ${{ (success() || failure()) && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
        run: |
          TEST_RESULT="$(cat test-result-console)"
          TEST_RESULT="${TEST_RESULT//'%'/'%25'}"
          TEST_RESULT="${TEST_RESULT//$'\n'/'%0A'}"
          TEST_RESULT="${TEST_RESULT//$'\r'/'%0D'}"
          TEST_RESULT="$(echo $TEST_RESULT | sed 's/\x1B\[[0-9;]\+[A-Za-z]//g')"
          echo "::set-output name=test_result::$(echo $TEST_RESULT)"

      - name: Find Comment (After)
        uses: peter-evans/find-comment@v1
        id: fc_after
        if: ${{ (success() || failure()) && github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        continue-on-error: true
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: 'by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}'
          direction: last

      - name: Succeed (Create PR Comment)
        if: ${{ (success() || failure()) && github.event_name == 'pull_request' && steps.test.outcome == 'success' && steps.fc_after.outputs.comment-id == '' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ✅ 테스트 `${{ matrix.gradle.name }}` 에 성공했습니다!
            **🎉 현재 시스템의 테스트가 모두 통과하였습니다.** 자세한 내역은 Action 의 `Details` 버튼을 누른 후 확인하실 수 있습니다.

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

      - name: Succeed (Update PR Comment)
        if: ${{ (success() || failure()) && github.event_name == 'pull_request' && steps.test.outcome == 'success' && steps.fc_after.outputs.comment-id != '' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc_after.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### ✅ 테스트 `${{ matrix.gradle.name }}` 에 성공했습니다!
            **🎉 현재 시스템의 테스트가 모두 통과하였습니다.** 자세한 내역은 Action 의 `Details` 버튼을 누른 후 확인하실 수 있습니다.

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

      - name: Failed (Create PR Comment)
        if: ${{ (success() || failure()) && github.event_name == 'pull_request' && steps.test.outcome != 'success' && steps.fc_after.outputs.comment-id == '' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ❌ 테스트에 `${{ matrix.gradle.name }}` 실패하였습니다!
            현재 시스템의 테스트가 실패하였습니다. 아래 Action의 `Details` 를 확인하시거나, Comment를 통해 제공된 Console Log를 참고하시기 바랍니다.

            ### 🤖 Tests
            ```
            ${{ steps.test_result.outputs.test_result }}
            ```

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

      - name: Failed (Update PR Comment)
        if: ${{ (success() || failure()) && github.event_name == 'pull_request' && steps.test.outcome != 'success' && steps.fc_after.outputs.comment-id != '' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨') }}
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc_after.outputs.comment-id }}
          edit-mode: replace
          body: |
            ### ❌ 테스트에 `${{ matrix.gradle.name }}` 실패하였습니다!
            현재 시스템의 테스트가 실패하였습니다. 아래 Action의 `Details` 를 확인하시거나, Comment를 통해 제공된 Console Log를 참고하시기 바랍니다.

            ### 🤖 Tests
            ```
            ${{ steps.test_result.outputs.test_result }}
            ```

            by dshare-bot, PR COMMENT (check-gradle) ${{ matrix.gradle.name }}

  Codecov:
    name: Add report (Codecov.io)
    runs-on: actions-runner-system
    needs:
      - Tests
    if: ${{ (success() || failure()) && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
    steps:
      - name: Checkout Pull Request VCS
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          token: ${{ github.token }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Checkout VCS (Non PR)
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ github.token }}
          ref: ${{ github.ref }}

      - name: Download files
        uses: actions/download-artifact@v2

      - name: Show files
        run: |
          ls -la

      - name: Add Code coverage reports
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_REPO_TOKEN }}
          files: '*-github-action-codecov-report/report.xml'
          verbose: true

  NotifyResult:
    needs:
      - Tests
    if: ${{ (success() || failure()) && (github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'hotfix 🚨'))) }}
    name: 'Notification (Result)'
    runs-on: actions-runner-system
    steps:
      - name: Succeed (Slack PR)
        uses: slackapi/slack-github-action@v1.16.0
        if: ${{ github.event_name == 'pull_request' || (github.event_name != 'pull_request' && needs.Tests.result != 'success') }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ secrets.SLACK_REVIEW_NOTIFICATION_CHANNEL }}
          payload: |
            {
            	"blocks": [
            		{
            			"type": "section",
            			"text": {
            				"type": "mrkdwn",
            				"text": "*${{ needs.Tests.result == 'success' && '✅ 테스트 및 검증 성공* _(SUCCESS)_' || '❌ 테스트 및 검증 실패* _(FAILURE)_' }}"
            			}
            		},
            		{
            			"type": "section",
            			"fields": [
                            {
                            	"type": "mrkdwn",
                            	"text": "> *${{ github.event_name == 'pull_request' && 'PR Title' || 'Commit' }}:*\n> ${{ github.event_name == 'pull_request' && github.event.pull_request.title || github.sha }}"
                            },
            				{
            					"type": "mrkdwn",
            					"text": "> *Repository:*\n> ${{ github.repository }}"
            				},
            				{
            					"type": "mrkdwn",
            					"text": "> *${{ github.event_name == 'pull_request' && 'PR Number' || 'Branch' }}:*\n> ${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}"
            				}
            			]
            		},
            		{
            			"type": "actions",
            			"elements": [
            				{
            					"type": "button",
            					"text": {
            						"type": "plain_text",
            						"emoji": true,
            						"text": "📄 ${{ github.event_name == 'pull_request' && 'PR로' || 'Commit으로' }} 바로가기"
            					},
            					"url": "${{ github.event_name == 'pull_request' && format('{0}/{1}/pull/{2}', github.server_url, github.repository, github.event.pull_request.number) || format('{0}/{1}/commit/{2}', github.server_url, github.repository, github.sha) }}"
            				},
            				{
            					"type": "button",
            					"text": {
            						"type": "plain_text",
            						"emoji": true,
            						"text": "🚀 Action 결과로 바로가기"
            					},
            					"url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            				}
            			]
            		},
            		{
            			"type": "context",
            			"elements": [
            				{
            					"type": "mrkdwn",
            					"text": "*${{ github.actor }}* 님이 실행 또는 해당 브랜치(PR)를 작업하셨습니다."
            				}
            			]
            		}
            	]
            }
